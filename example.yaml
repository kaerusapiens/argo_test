apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: artifact-example-
  namespace: argo
spec:
  entrypoint: literal-test
  onExit: on-exithandler
  volumes:
    - name: tmp
      emptyDir: {}
  templates:
    - name: literal-test
      steps:
        - - name: step1
            template: main
          
    - name: main
      container:
        image: busybox
        command: [sh, -c]
        args: 
         - exit 1
    - name: parsing
      outputs:
        parameters:
          - name: parsed-failures
            valueFrom:
              path: /tmp/parsed_failures.txt
      script:
        image: alpine
        command: [sh, -c]
        source: |
          apk add --no-cache jq
          echo '```' > /tmp/parsed_failures.txt
          echo '{{workflow.failures}}' | jq -r 'fromjson | .[] | "\(.displayName)\t\(.phase)\t\(.podName)\t\(.finishedAt)\t\(.message)"' | \
          while IFS=$(printf '\t') read -r displayName phase podName finishedAt message; do
            printf "‣ displayName: %s %s\n" "$displayName" "$phase"
            printf "└───podName: %s\n" "$podName"
            printf "└───message: %s\n" "$message"
            printf "└───finishedAt: %s\n" "$finishedAt"
          done >> /tmp/parsed_failures.txt
          echo '```' >> /tmp/parsed_failures.txt
        volumeMounts:
          - name: tmp
            mountPath: /tmp
    - name: on-exithandler
      steps:
        - - name: parse-failures
            template: parsing
        - - name: output-parameters
            template: output-parsed-failures
            arguments:
              parameters:
                - name: parsed-failures
                  value: "{{steps.parse-failures.outputs.parameters.parsed-failures}}"
    - name: output-parsed-failures
      inputs:
        parameters:
          - name: parsed-failures
            value: /tmp/parsed_failures.txt
      script:
        image: alpine
        command: [sh, -c]
        source: |
            cat << 'EOF' | tee /tmp/parsed_failures.txt
            {{inputs.parameters.parsed-failures}}
            EOF
        volumeMounts:
          - name: tmp
            mountPath: /tmp